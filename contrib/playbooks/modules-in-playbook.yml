---
# All rights reserved (c) 2022-2024, Vladimir Botka <vbotka@gmail.com>
# Simplified BSD License, https://opensource.org/licenses/BSD-2-Clause

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# List modules and collections in a playbook
#
# Example:
#
# shell> ansible-playbook modules-in-playbook.yml -e my_playbook_path=pb.yml
#
# TASK [Display results] ***********************************************
# ok: [localhost] =>
#   msg: |2-
#
#     list_of_modules:
#       - ansible.builtin.assert
#       - ansible.builtin.debug
#       - ansible.builtin.find
#       - ansible.builtin.set_fact
#
#     list_of_collections:
#       - ansible.builtin
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# https://github.com/vbotka/ansible-ansible/tree/master/contrib/playbooks

- name: List modules and collections in a playbook
  hosts: localhost
  gather_facts: false

  vars_files:
    - keywords.yml

  vars:

    lft: "{{ lookup('file', my_playbook_path) | from_yaml | map(attribute='tasks') | flatten }}"
    lfm: "{{ (lft | json_query('[].keys(@)') +
              lft | json_query('[].[block[].keys(@), rescue[].keys(@), always[].keys(@)]')) |
              flatten | unique | difference(keywords) | sort }}"
    lfc: "{{ lfm | map('splitext') | map('first') | unique | sort }}"

  tasks:

    - name: Sanity
      block:

        - name: The variable my_playbook_path is mandatory
          ansible.builtin.assert:
            that: my_playbook_path | d('') | length > 0
            fail_msg: '[ERR] The variable my_playbook_path is mandatory.'

        - name: The file my_playbook_path exists
          ansible.builtin.assert:
            that: my_playbook_path is exists
            fail_msg: '[ERR] The file {{ my_playbook_path }} does not exist.'

    - name: Display results
      ansible.builtin.debug:
        msg: |

          list_of_modules:
            {{ lfm | to_nice_yaml(indent=2) | indent(2) }}
          list_of_collections:
            {{ lfc | to_nice_yaml(indent=2) | indent(2) }}
