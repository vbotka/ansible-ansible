---
# All rights reserved (c) 2019, Vladimir Botka <vbotka@gmail.com>
# Simplified BSD License, https://opensource.org/licenses/BSD-2-Clause

# RoleMaster. Management of roles' meta-data and licenses.
#
# Examples
#
# 1) Create list of roles' paths rm-roles-path
#    $ ansible-playbook rolemaster.yml -t rm-list-roles-path
#    $ ansible-playbook rolemaster.yml -t rm-list-roles-path -e 'rm_debug=true'
#
# 2) Write roles' meta-data to rm_roles_meta_file
#    $ ansible-playbook rolemaster.yml -t rm-list-roles-path,rm-write-roles-meta
#    $ ansible-playbook rolemaster.yml -t rm-list-roles-path,rm-write-roles-meta -e 'rm_debug=true'
#
# 3) Read roles' meta-data from rm_roles_meta_file
#    $ ansible-playbook rolemaster.yml -t rm-read-roles-meta
#    $ ansible-playbook rolemaster.yml -t rm-read-roles-meta -e 'rm_debug=true'
#
# 4) Restore meta-data
#    $ ansible-playbook rolemaster.yml -t rm-restore-roles-meta
#    $ ansible-playbook rolemaster.yml -t rm-restore-roles-meta -e 'rm_debug=true'
#
# 5) Restore licenses
#    $ ansible-playbook rolemaster.yml -t rm-restore-roles-license
#    $ ansible-playbook rolemaster.yml -t rm-restore-roles-license -e 'rm_debug=true'
#
# 6) Copy common files
#    $ ansible-playbook rolemaster.yml -t rm-copy-common-files
#    $ ansible-playbook rolemaster.yml -t rm-copy-common-files -e 'rm_debug=true'

# Notes:
# 1) Create LICENSE-test and see the diff.
#    $ for i in `find roles -name "MY-PROJECT*"`; do
#      (echo $i; cd $i; diff LICENSE LICENSE-test); done


- hosts: localhost
  gather_facts: false
  become: false

  vars:

    rm_version: 1.1.0

    # >>> CHANGE THIS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    rm_owner: vlado
    rm_group: vlado
    rm_roles_pattern: vbotka.*
    rm_roles_license_holder: 'Vladimir Botka <vbotka@gmail.com>'
    rm_roles_license_year_to: 2019
    # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> CHANGE THIS <<<

    rm_debug: true
    rm_backup_conf: false
    rm_roles_path: ''  # Get roles_path from ansible.cfg
    # rm_roles_path: '/home/{{ rm_owner }}/.ansible/roles'
    rm_roles_file_mode: '0644'
    rm_roles_meta_file_write: true
    rm_roles_meta_file: '/home/{{ rm_owner }}/.ansible/db/roles_meta.yml'
    rm_roles_meta_dir: '/home/{{ rm_owner }}/.ansible/db/meta'
    rm_roles_license_file: '/home/{{ rm_owner }}/.ansible/db/roles_license.yml'
    rm_roles_license_dir: '/home/{{ rm_owner }}/.ansible/db/license'
    # rm_ansible_lint: '/home/{{ rm_owner }}/bin/ansible-lint -c
    #                   /home/{{ rm_owner }}/.ansible/.ansible-lint'

  tasks:

    - block:
      - name: 'rm: list-roles-path: Get roles_path from ansible.cfg'
        when: rm_roles_path|length == 0
        set_fact:
          roles_path: "{{ lookup('ini', 'roles_path section=defaults file=ansible.cfg') }}"
      - name: 'rm: list-roles-path: Get roles_path from rm_roles_path'
        when: rm_roles_path|length > 0
        set_fact:
          roles_path: "{{ rm_roles_path }}"
      - name: 'rm: list-roles-path: Debug {{ roles_path }}'
        when: rm_debug|bool
        debug:
          var: roles_path
      - name: 'rm: list-roles-path: Fail when roles_path is undefined'
        when: roles_path is undefined
        fail:
          msg: '[ERROR] roles_path is undefined. End of play.'
      tags: always

    - name: 'rm: Create list of roles paths rm-roles-path'
      import_tasks: tasks/list-roles-path.yml
      tags: rm-list-roles-path

    - name: 'rm: Write roles meta-data to rm_roles_meta_file'
      import_tasks: tasks/write-roles-meta.yml
      tags: rm-write-roles-meta

    - name: 'rm: Read roles meta-data from rm_roles_meta_file'
      import_tasks: tasks/read-roles-meta.yml
      tags: rm-read-roles-meta

    - name: 'rm: Restore roles meta-data from rm_roles_meta_file'
      import_tasks: tasks/restore-roles-meta.yml
      tags: rm-restore-roles-meta

    - name: 'rm: Restore roles license from rm_roles_license_file'
      import_tasks: tasks/restore-roles-license.yml
      tags: rm-restore-roles-license

    - name: 'rm: Copy common files'
      import_tasks: tasks/copy-common-files.yml
      tags: rm-copy-common-files

# EOF
...
