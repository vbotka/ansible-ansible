---

- name: 'rm: retore-license: Include vars'
  ansible.builtin.include_vars: "{{ rm_roles_license_file }}"

- name: 'rm: retore-license: Debug'
  ansible.builtin.debug:
    msg: |-
      rm_roles_select_list:
        {{ rm_roles_select_list|to_nice_yaml(indent=2)|indent(2) }}
      {% if rm_roles_select_list|length == 0 %}
      rm_roles_license:
        {{ rm_roles_license|to_nice_yaml(indent=2)|indent(2) }}
      {% else %}
      rm_roles_license: (selected)
      {% for i in rm_roles_select_list %}
        {{ i }}:
          {{ rm_roles_license[i]|to_nice_yaml(indent=2)|indent(4) }}
      {% endfor %}
      {% endif %}
  when: rm_debug|bool

- name: 'rm: restore-license: Create roles license files'
  ansible.builtin.template:
    src: "templates/{{ item.value.template }}"
    dest: "{{ roles_path }}/{{ item.key }}/LICENSE"
    owner: "{{ rm_owner }}"
    group: "{{ rm_group }}"
    mode: "{{ rm_roles_file_mode }}"
    backup: "{{ rm_backup_conf }}"
#   validate: "{{ rm_ansible_lint }} %s"
  loop: "{{ _select }}"
  loop_control:
    label: "{{ item.key }}"
  vars:
    _select: |
      {% if rm_roles_select_list|length == 0 %}
      {{ rm_roles_license|dict2items }}
      {% else %}
      {{ rm_roles_license|dict2items|selectattr('key', 'in', rm_roles_select_list) }}
      {% endif %}
  when: item.key|basename not in rm_roles_blacklist

# EOF
...
